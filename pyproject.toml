[project]
name = "faculty_ai_tinkerers_hackathon"
version = "0.1.0"
description = ""
authors = [
    {name = "Faculty Science Limited", email = "your.email@faculty.ai"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "sphinx>=8.1.3",
  "faculty-sphinx-theme>=0.3.1",
  # "faculty-plot==2022.1.0",
  "fastapi>=0.111.1",
  "uvicorn[standard]>=0.30.3",
  "websockets>=12.0",
]

[tool.uv.sources]
faculty-plot = { url = "https://faculty.jfrog.io/artifactory/api/pypi/faculty-no-pypi/simple" }


[tool.uv]
dev-dependencies = [
  "pre-commit>=4.0.1",
  "nbstripout>=0.8.1",
  "pytest>=8.3.3",
  "pytest-cov>=6.0.0",
  "ruff>=0.11.4",
  "ipykernel>=6.29.5",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/faculty_ai_tinkerers_hackathon"]

[tool.hatch.version]
source = "vcs"

[project.scripts]
post-install = "pre_commit:install_hooks"

[tool.ruff]
line-length = 120
force-exclude = true
target-version = "py312"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
  "E", "F", "W",
  # Include flake8-bugbear
  "B",
  # Include Isort rules
  "I",
  # Prefer absolute imports
  "TID252",
  # Ban print and pprint statements - use a logger
  "T201", "T203",
  # Use loggers correctly
  "LOG001", "LOG002", "LOG007", "LOG009",
  "G001", "G002", "G003", "G004", "G010", "G101",
  "G201", "G202"
]
unfixable = ["B"]

[tool.ruff.lint.isort]
known-first-party = ["faculty_ai_tinkerers_hackathon"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
